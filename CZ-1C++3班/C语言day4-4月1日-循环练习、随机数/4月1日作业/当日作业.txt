基础题：
1、定义两个数组并初始化，写代码交换它们的内容。
2、随机取出25个0~9之间的随机数，判断0~9这10个数字是不是都出现了。
3、输入n，然后输入n个数字，输出其中的次大值
4、输入两个数m和n，输出m和n中不同的二进制位有多少个。例如10和12，二进制位1010和1100，中间两位不同。
5、输入n，然后在屏幕上输出2*n-1行以下图案：

7
      *
     ***
    *****
   *******
  *********
 ***********
*************
 ***********
  *********
   *******
    *****
     ***
      *
 



进阶题：

1、输入n（n≤50）作为数组长度，然后输入n个数字，填入数组，判断有没有出现次数不少于数组长度一半的的数字，如果有就输出这个数字，如果没有就输出-1。


2、给出一个正整数 n(n≤100)，然后对这个数字一直进行下面的操作：如果这个数字是奇数，那么将其乘 3 再加 1，否则除以 2。经过若干次循环后，最终都会回到 1。经过验证很大的数字（已经证明了7×10^11以内的数都可以）都可以按照这样的方式变成 1，所以被称为“冰雹猜想”。例如当n是 20，变化的过程是 [20, 10, 5, 16, 8, 4, 2, 1]。
根据给定的数字，验证这个猜想，并从最后的 1 开始，倒序输出整个变化序列。
例：       输入：20       输出：1 2 4 8 16 5 10 20

3、5位运动员参加了10米台跳水比赛，有人让他们预测比赛结果
A选手说：B第二，我第三；
B选手说：我第二，E第四；
C选手说：我第一，D第二；
D选手说：C最后，我第三；
E选手说：我第四，A第一；
比赛结束后，每位选手都说对了一半，请编程确定比赛的名次。