1、完成分数的四则运算：
函数接口：

int fraction(int numA, int denA, int numB, int denB, char ch, int* pNumAns, int* pDenAns);

参数列表解释：
numA、denA是第一个数字的分子分母
numB、denB是第二个数字的分子分母
ch是+-*/中的一个
pNumAns、pDenAns是答案的分子分母
返回值解释：
返回值是用来校验除数为0、分母为0的情况，正常返回0，无法计算返回-1。

注：传入的变量可能是负的，如果结果为负数，则体现在分子上，计算结果不会超过int的上限。


2、二维数组的顺时针遍历：
输入m和n，然后输入一个m*n的二维数组，将其从左上角开始按照顺时针方式遍历，例如：
输入：
3 3
1 2 3
4 5 6
7 8 9

输出：
1 2 3 6 9 8 7 4 5

3、数根可以通过把一个数的各个位上的数字加起来得到。如果得到的数是一位数，那么这个数就是数根；如果结果是两位数或者包括更多位的数字，那么再把这些数字加起来。如此进行下去，直到得到是一位数为止。
比如，对于24 来说，把2 和4相加得到6，由于6 是一位数，因此6 是24的数根。
再比如39，把3 和9 加起来得到12，由于12 不是一位数，因此还得把1 和2 加起来，最后得到3，这是一个一位数，因此3 是39 的数根。
现在给你一个正整数，输出它的数根。


4、某商店规定：三个空汽水瓶可以换一瓶汽水，允许向老板借空汽水瓶（但是必须要归还）。
小张手上有n个空汽水瓶，她想知道自己最多可以喝到多少瓶汽水。

输入：
20
输出：
30

解释：
20瓶汽水喝完剩下20个瓶盖，可以换6瓶，喝完剩下8个瓶盖。
8个瓶盖可以换2瓶，剩下4个瓶盖。
4个瓶盖可以换1瓶，剩下2个瓶盖。
借出一瓶喝完剩下三个瓶盖，还给老板，结束。
一共可以喝：20+6+2+1+1=30瓶汽水